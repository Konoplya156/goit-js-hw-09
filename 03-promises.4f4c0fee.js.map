{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAsCA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC1BC,YAAW,KACNN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,EA9CA,CACXQ,YAAaC,SAASC,cAAc,WAIjCF,YAAYG,iBAAiB,UAIlC,SAAsBC,GACpBA,EAAIC,iBAEJ,MAAQb,MAAAc,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAIK,OAAOC,SAC3C,IAAIC,EAAYC,OAAON,EAAMO,OAE7B,GAAIP,EAAMO,MAAQ,GAAKN,EAAKM,MAAQ,GAAKL,EAAOK,MAAQ,EAEtD,YADAzB,EAAA0B,OAAOC,QAAQ,qCAIjB3B,EAAA0B,OAAOE,QAAQ,4CAEf,IAAK,IAAIC,EAAI,EAAGA,GAAKT,EAAOK,MAAOI,GAAK,EACtC3B,EAAc2B,EAAGN,GACdO,MAAK,EAAC3B,SAAEA,EAAQC,MAAEA,MACjBJ,EAAA0B,OAAOE,QAAQ,wBAAsBzB,QAAiBC,MAAU,IAEjE2B,OAAM,EAAC5B,SAAEA,EAAQC,MAAEA,MAClBJ,EAAA0B,OAAOC,QAAQ,uBAAqBxB,QAAeC,MAAU,IAEjEmB,GAAaC,OAAOL,EAAKM,OAG3BT,EAAIgB,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix';\n\nconst refs = {\n  formInputEl: document.querySelector('.form'),\n};\n\n\nrefs.formInputEl.addEventListener('submit', onFormSubmit);\n\n/** functions */\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n\n  const { delay, step, amount } = evt.target.elements;\n  let stepValue = Number(delay.value);\n\n  if (delay.value < 1 || step.value < 1 || amount.value < 1) {\n    Notify.failure(`All fields must be more than zero`);\n    return;\n  }\n\n  Notify.success('Please observe the promises appear below');\n\n  for (let i = 1; i <= amount.value; i += 1) {\n    createPromise(i, stepValue)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise #${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise #${position} in ${delay}ms`);\n      });\n    stepValue += Number(step.value);\n  }\n\n  evt.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n     setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","formInputEl","document","querySelector","addEventListener","evt","preventDefault","delay1","step","amount","target","elements","stepValue","Number","value","Notify","failure","success","i","then","catch","currentTarget","reset"],"version":3,"file":"03-promises.4f4c0fee.js.map"}