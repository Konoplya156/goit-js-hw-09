{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAsCA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC1BC,YAAW,WACNN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,KA9CM,CACXQ,YAAaC,SAASC,cAAc,WAIjCF,YAAYG,iBAAiB,UAIlC,SAAsBC,GACpBA,EAAIC,iBAEJ,IAAgCC,EAAAF,EAAIG,OAAOC,SAAnCC,EAAwBH,EAAxBd,MAAOkB,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OACjBC,EAAYC,OAAOJ,EAAMK,OAE7B,GAAIL,EAAMK,MAAQ,GAAKJ,EAAKI,MAAQ,GAAKH,EAAOG,MAAQ,EAEtD,YADA1B,EAAA2B,OAAOC,QAAS,qCAIlB5B,EAAA2B,OAAOE,QAAQ,4CAEf,IAAK,IAAIC,EAAI,EAAGA,GAAKP,EAAOG,MAAOI,GAAK,EACtC5B,EAAc4B,EAAGN,GACdO,MAAK,SAAAC,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MACjBJ,EAAA2B,OAAOE,QAAQ,wBAAyCI,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAE/D8B,OAAM,SAAAF,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MAClBJ,EAAA2B,OAAOC,QAAQ,uBAAsCK,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAE/DoB,GAAaC,OAAOH,EAAKI,OAG3BV,EAAImB,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix';\n\nconst refs = {\n  formInputEl: document.querySelector('.form'),\n};\n\n\nrefs.formInputEl.addEventListener('submit', onFormSubmit);\n\n/** functions */\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n\n  const { delay, step, amount } = evt.target.elements;\n  let stepValue = Number(delay.value);\n\n  if (delay.value < 1 || step.value < 1 || amount.value < 1) {\n    Notify.failure(`All fields must be more than zero`);\n    return;\n  }\n\n  Notify.success('Please observe the promises appear below');\n\n  for (let i = 1; i <= amount.value; i += 1) {\n    createPromise(i, stepValue)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise #${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise #${position} in ${delay}ms`);\n      });\n    stepValue += Number(step.value);\n  }\n\n  evt.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n     setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","formInputEl","document","querySelector","addEventListener","evt","preventDefault","_elements","target","elements","delay1","step","amount","stepValue","Number","value","Notify","failure","success","i","then","param","concat","catch","currentTarget","reset"],"version":3,"file":"03-promises.524c1780.js.map"}